{"version":3,"sources":["assets/tmovie.png","components/header/Header.jsx","assets/footer-bg.jpg","components/footer/Footer.jsx","components/button/Button.jsx","components/modal/Modal.jsx","api/apiConfig.js","api/axiosClient.js","api/tmdbApi.js","components/hero-slide/HeroSlide.jsx","components/movie-card/MovieCard.jsx","components/movie-list/MovieList.jsx","pages/Home.jsx","components/page-header/PageHeader.jsx","components/input/Input.jsx","components/movie-grid/MovieGrid.jsx","pages/Catalog.jsx","pages/detail/CastList.jsx","assets/play-circle-svgrepo-com (1).svg","components/season-list/season-list.jsx","assets/navigation-last-last-page-lastpage-right-next-icon-svgrepo-com.svg","assets/navigation-before-first-page-firstpage-left-previous-icon-svgrepo-com.svg","assets/list-ul-alt-svgrepo-com (1).svg","assets/back-svgrepo-com.svg","pages/detail/Detail.jsx","config/Routes.jsx","components/introLoader/introLoader.jsx","App.js","index.js"],"names":["headerNav","display","path","Header","pathname","useLocation","headerRef","useRef","active","findIndex","e","useEffect","shrinkHeader","document","body","scrollTop","documentElement","current","classList","add","remove","window","addEventListener","removeEventListener","_jsx","ref","className","children","_jsxs","src","logo","alt","Link","to","map","i","concat","twitter","open","github","Footer","style","backgroundImage","bg","onClick","Button","props","OutlineButton","ModalContent","contentRef","closeModal","parentNode","onClose","Modal","setActive","useState","id","apiConfig","baseUrl","apiKey","originalImage","imgPath","w500Image","axiosClient","axios","create","baseURL","headers","paramsSerializer","params","queryString","stringify","api_key","interceptors","request","use","async","config","response","data","error","category","movie","tv","movieType","upcoming","popular","top_rated","tvType","on_the_air","tmdbApi","getMoviesList","type","url","get","getTvList","getVideos","cate","search","detail","getEpisodeDetails","seasonNumber","episodeNumber","getSeasonDetails","credits","similar","HeroSlideItem","hisrory","useHistory","item","background","backdrop_path","poster_path","urlTitle","title","replace","overview","push","toLowerCase","modal","querySelector","videos","results","length","videSrc","key","setAttribute","innerHTML","toggle","TrailerModal","iframeRef","width","height","HeroSlide","SwiperCore","Autoplay","movieItems","setMovieItems","page","slice","console","log","getMovies","Swiper","modules","grabCursor","spaceBetween","slidesPerView","SwiperSlide","_ref","isActive","MovieCard","name","link","toLocaleLowerCase","MovieList","items","setItems","getList","Home","_Fragment","PageHeader","Input","placeholder","value","onChange","MovieSearch","history","keyword","setKeyword","goToSearch","useCallback","trim","urlKeyword","enterEvent","preventDefault","keyCode","target","MovieGrid","setPage","totalPage","setTotalPage","useParams","undefined","query","total_pages","Catalog","CastList","casts","setCasts","res","cast","getCredits","profile_path","SeasonList","showSeasonsFunction","seasonNumberFunction","setItem","getDetail","SeasonCard","seasons","season","season_number","episode_count","playIcon","Detail","episode","setEpisode","setSeason","iframeSrc","setIframeSrc","TitleCategory","setTitleCategory","typeOfContent","setTypeOfContent","scrollTo","showSeasons","setShowSeasons","showEpisodes","setshowEpisodes","setEpisodeNumber","setSeasonNumber","episodeUrl","isHidden","listaEpisodios","getElementById","getEpisodeDetail","genres","genre","runtime","release_date","number_of_seasons","number_of_episodes","first_air_date","frameborder","allowfullscreen","webkitallowfullscreen","mozallowfullscreen","sandbox","seasonSelected","episode_number","previusEpisode","previusIcon","changeIsHidden","listIcon","episodes","changeEpisode","still_path","backIcon","nextEpisode","nextIcon","Routes","Switch","Route","component","exact","IntroLoader","App","showLoader","setShowLoader","setTimeout","event","tagName","removeIframeFromBody","iframeToRemove","removeChild","BrowserRouter","render","ReactDOM","React","StrictMode"],"mappings":"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","file":"static/js/main.6b2dafb6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tmovie.d90e12e7.png\";","import React, { useRef, useEffect } from 'react';\r\n\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nimport './header.scss';\r\n\r\nimport logo from '../../assets/tmovie.png';\r\n\r\nconst headerNav = [\r\n    {\r\n        display: 'Inicio',\r\n        path: '/'\r\n    },\r\n    {\r\n        display: 'Peliculas',\r\n        path: '/movie'\r\n    },\r\n    {\r\n        display: 'Series',\r\n        path: '/tv'\r\n    }\r\n];\r\n\r\nconst Header = () => {\r\n\r\n    const { pathname } = useLocation();\r\n    const headerRef = useRef(null);\r\n\r\n    const active = headerNav.findIndex(e => e.path === pathname);\r\n\r\n    useEffect(() => {\r\n        const shrinkHeader = () => {\r\n            if (document.body.scrollTop > 100 || document.documentElement.scrollTop > 100) {\r\n                headerRef.current.classList.add('shrink');\r\n            } else {\r\n                headerRef.current.classList.remove('shrink');\r\n            }\r\n        }\r\n        window.addEventListener('scroll', shrinkHeader);\r\n        return () => {\r\n            window.removeEventListener('scroll', shrinkHeader);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div ref={headerRef} className=\"header\">\r\n            <div className=\"header__wrap container\">\r\n                <div className=\"logo\">\r\n                    <img src={logo} alt=\"\" />\r\n                    <Link to=\"/\">ZETA STREAMING</Link>\r\n                </div>\r\n                <ul className=\"header__nav\">\r\n                    {\r\n                        headerNav.map((e, i) => (\r\n                            <li key={i} className={`${i === active ? 'active' : ''}`}>\r\n                                <Link to={e.path}>\r\n                                    {e.display}\r\n                                </Link>\r\n                            </li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/footer-bg.67e95f05.jpg\";","import React from 'react';\r\n\r\nimport './footer.scss';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport bg from '../../assets/footer-bg.jpg';\r\nimport logo from '../../assets/tmovie.png';\r\n\r\nconst twitter = () => {\r\n    window.open('https://twitter.com/itsztorm', '_blank');\r\n};\r\nconst github = () => {\r\n    window.open('https://github.com/ZTormDev', '_blank');\r\n};\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\" style={{backgroundImage: `url(${bg})`}}>\r\n            <div className=\"footer__content container\">\r\n                <div className=\"footer__content__logo\">\r\n                    <div className=\"logo\">\r\n                        <img src={logo} alt=\"\" />\r\n                        <Link to=\"/\">ZETA STREAMING</Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"footer__content__menus\">\r\n                    <div className=\"footer__content__menu\">\r\n                        <Link to=\"/\">Inicio</Link>\r\n                        <Link to=\"/peliculas\">Peliculas</Link>\r\n                        <Link to=\"/series\">Series</Link>\r\n                    </div>\r\n                    <div className=\"footer__content__menu\">\r\n                        <Link onClick={twitter}>Sigueme en Twitter</Link>\r\n                        <Link onClick={github}>Sigueme en GitHub</Link>\r\n                    </div>\r\n                    <div className=\"footer__content__menu\">\r\n                        <Link to=\"/\">Tienes que ver</Link>\r\n                        <Link to=\"/\">Lanzamientos Recientes</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './button.scss';\n\nconst Button = props => {\n    return (\n        <button\n            className={`btn ${props.className}`}\n            onClick={props.onClick ? () => props.onClick() : null}\n        >\n            {props.children}\n        </button>\n    );\n}\n\nexport const OutlineButton = props => {\n    return (\n        <Button\n            className={`btn-outline ${props.className}`}\n            onClick={props.onClick ? () => props.onClick() : null}\n        >\n            {props.children}\n        </Button>\n    );\n}\n\nButton.propTypes = {\n    onClick: PropTypes.func\n}\n\nexport default Button;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './modal.scss';\n\nconst Modal = props => {\n\n    const [active, setActive] = useState(false);\n\n    useEffect(() => {\n        setActive(props.active);\n    }, [props.active]);\n\n    return (\n        <div id={props.id} className={`modal ${active ? 'active' : ''}`}>\n            {props.children}\n        </div>\n    );\n}\n\nModal.propTypes = {\n    active: PropTypes.bool,\n    id: PropTypes.string\n}\n\nexport const ModalContent = props => {\n\n    const contentRef = useRef(null);\n\n    const closeModal = () => {\n        contentRef.current.parentNode.classList.remove('active');\n        if (props.onClose) props.onClose();\n    }\n\n    return (\n        <div ref={contentRef} className=\"modal__content\">\n            {props.children}\n            <div className=\"modal__content__close\" onClick={closeModal}>\n                <i className=\"bx bx-x\"></i>\n            </div>\n        </div>\n    )\n}\n\nModalContent.propTypes = {\n    onClose: PropTypes.func\n}\n\nexport default Modal;\n","const apiConfig = {\n    baseUrl: 'https://api.themoviedb.org/3/',\n    apiKey: 'a6960f7d344cbd7240a620d7c9a590c1',\n    originalImage: (imgPath) => `https://image.tmdb.org/t/p/original/${imgPath}`,\n    w500Image: (imgPath) => `https://image.tmdb.org/t/p/w500/${imgPath}`\n}\n\nexport default apiConfig;","import axios from 'axios';\nimport queryString from 'query-string';\n\nimport apiConfig from './apiConfig';\n\nconst axiosClient = axios.create({\n    baseURL: apiConfig.baseUrl,\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    paramsSerializer: params => queryString.stringify({...params, api_key: apiConfig.apiKey})\n});\n\naxiosClient.interceptors.request.use(async (config) => config);\n\naxiosClient.interceptors.response.use((response) => {\n    if (response && response.data) {\n        return response.data;\n    }\n\n    return response;\n}, (error) => {\n    throw error;\n});\n\nexport default axiosClient;","import axiosClient from \"./axiosClient\";\n\nexport const category = {\n    movie: 'movie',\n    tv: 'tv'\n}\n\nexport const movieType = {\n    upcoming: 'upcoming',\n    popular: 'popular',\n    top_rated: 'top_rated'\n}\n\nexport const tvType = {\n    popular: 'popular',\n    top_rated: 'top_rated',\n    on_the_air: 'on_the_air',\n}\n\nconst tmdbApi = {\n    getMoviesList: (type, params) => {\n        const url = 'movie/' + movieType[type] + '?language=es-ES';\n        return axiosClient.get(url, params);\n    },\n    getTvList: (type, params) => {\n        const url = 'tv/' + tvType[type] + '?language=es-ES';\n        return axiosClient.get(url, params);\n    },\n    getVideos: (cate, id) => {\n        const url = category[cate] + '/' + id + '/videos';\n        return axiosClient.get(url, {params: {}});\n    },\n    search: (cate, params) => {\n        const url = 'search/' + category[cate];\n        return axiosClient.get(url, params);\n    },\n    detail: (cate, id, params) => {\n        const url = category[cate] + '/' + id + '?language=es-ES';\n        return axiosClient.get(url, params);\n    },\n    getEpisodeDetails: (cate, id, seasonNumber, episodeNumber, params, ) => {\n        const url = category[cate] + '/' + id + '/season/' + seasonNumber + '/episode/' + episodeNumber + '?language=es-ES';\n        return axiosClient.get(url, params);\n    },\n    getSeasonDetails: (cate, id, seasonNumber, params, ) => {\n        const url = category[cate] + '/' + id + '/season/' + seasonNumber + '?language=es-ES';\n        return axiosClient.get(url, params);\n    },\n    credits: (cate, id) => {\n        const url = category[cate] + '/' + id + '/credits';\n        return axiosClient.get(url, {params: {}});\n    },\n    similar: (cate, id) => {\n        const url = category[cate] + '/' + id + '/similar';\n        return axiosClient.get(url, {params: {}});\n    },\n}\n\nexport default tmdbApi;","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport SwiperCore, { Autoplay } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n\r\nimport Button, { OutlineButton } from '../button/Button';\r\nimport Modal, { ModalContent } from '../modal/Modal';\r\n\r\nimport tmdbApi, { category, movieType } from '../../api/tmdbApi';\r\nimport apiConfig from '../../api/apiConfig';\r\n\r\nimport './hero-slide.scss';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst HeroSlide = () => {\r\n\r\n    SwiperCore.use([Autoplay]);\r\n\r\n    const [movieItems, setMovieItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getMovies = async () => {\r\n            const params = {page: 1}\r\n            try {\r\n                const response = await tmdbApi.getMoviesList(movieType.popular, {params});\r\n                setMovieItems(response.results.slice(1, 4));\r\n                console.log(response);\r\n            } catch {\r\n                console.log('error');\r\n            }\r\n        }\r\n        getMovies();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"hero-slide\">\r\n            <Swiper\r\n                modules={[Autoplay]}\r\n                grabCursor={true}\r\n                spaceBetween={0}\r\n                slidesPerView={1}\r\n                // autoplay={{delay: 3000}}\r\n            >\r\n                {\r\n                    movieItems.map((item, i) => (\r\n                        <SwiperSlide key={i}>\r\n                            {({ isActive }) => (\r\n                                <HeroSlideItem item={item} className={`${isActive ? 'active' : ''}`} />\r\n                            )}\r\n                        </SwiperSlide>\r\n                    ))\r\n                }\r\n            </Swiper>\r\n            {\r\n                movieItems.map((item, i) => <TrailerModal key={i} item={item}/>)\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst HeroSlideItem = props => {\r\n\r\n    let hisrory = useHistory();\r\n\r\n    const item = props.item;\r\n\r\n    const background = apiConfig.originalImage(item.backdrop_path ? item.backdrop_path : item.poster_path);\r\n\r\n    const setModalActive = async () => {\r\n        const modal = document.querySelector(`#modal_${item.id}`);\r\n\r\n        const videos = await tmdbApi.getVideos(category.movie, item.id);\r\n\r\n        if (videos.results.length > 0) {\r\n            const videSrc = 'https://www.youtube.com/embed/' + videos.results[0].key;\r\n            modal.querySelector('.modal__content > iframe').setAttribute('src', videSrc);\r\n        } else {\r\n            modal.querySelector('.modal__content').innerHTML = 'No trailer';\r\n        }\r\n\r\n        modal.classList.toggle('active');\r\n    }\r\n\r\n    \r\n    const originalTitle = `${item.title}`;\r\n\r\n    const urlTitle = originalTitle.replace(/ /g, '-')\r\n\r\n    return (\r\n        <div\r\n            className={`hero-slide__item ${props.className}`}\r\n            style={{backgroundImage: `url(${background})`}}\r\n        >\r\n            <div className=\"hero-slide__item__content container\">\r\n                <div className=\"hero-slide__item__content__info\">\r\n                    <h2 className=\"title\">{item.title}</h2>\r\n                    <div className=\"overview\">{item.overview}</div>\r\n                    <div className=\"btns\">\r\n                        <Button onClick={() => hisrory.push(`/movie/${item.id}/${urlTitle.toLowerCase()}`)}>\r\n                            Ver Ahora\r\n                        </Button>\r\n                        <OutlineButton onClick={setModalActive}>\r\n                            Ver Trailer\r\n                        </OutlineButton>\r\n                    </div>\r\n                </div>\r\n                <div className=\"hero-slide__item__content__poster\">\r\n                    <img src={apiConfig.w500Image(item.poster_path)} alt=\"\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TrailerModal = props => {\r\n    const item = props.item;\r\n\r\n    const iframeRef = useRef(null);\r\n\r\n    const onClose = () => iframeRef.current.setAttribute('src', '');\r\n\r\n    return (\r\n        <Modal active={false} id={`modal_${item.id}`}>\r\n            <ModalContent onClose={onClose}>\r\n                <iframe ref={iframeRef} width=\"100%\" height=\"500px\" title=\"trailer\"></iframe>\r\n            </ModalContent>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default HeroSlide;\r\n","import React from 'react';\r\n\r\nimport './movie-card.scss';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Button from '../button/Button';\r\n\r\nimport { category } from '../../api/tmdbApi';\r\nimport apiConfig from '../../api/apiConfig';\r\n\r\nconst MovieCard = props => {\r\n\r\n    const item  = props.item;\r\n\r\n    const originalTitle = `${item.title || item.name}`;\r\n\r\n    const urlTitle = originalTitle.replace(/ /g, '-')\r\n\r\n    const link = `/${category[props.category]}/${item.id}/${urlTitle.toLocaleLowerCase()}`;\r\n\r\n\r\n\r\n\r\n\r\n    const bg = apiConfig.w500Image(item.poster_path || item.backdrop_path);\r\n\r\n    return (\r\n        <Link to={link}>\r\n            <div className=\"movie-card\" style={{backgroundImage: `url(${bg})`}}>\r\n                <Button>\r\n                    <i className=\"bx bx-play\"></i>\r\n                </Button>\r\n            </div>\r\n            <h3>{item.title || item.name}</h3>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default MovieCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './movie-list.scss';\r\n\r\nimport { SwiperSlide, Swiper } from 'swiper/react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Button from '../button/Button';\r\n\r\nimport tmdbApi, { category } from '../../api/tmdbApi';\r\nimport apiConfig from '../../api/apiConfig';\r\n\r\nimport MovieCard from '../movie-card/MovieCard';\r\n\r\nconst MovieList = props => {\r\n\r\n    const [items, setItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getList = async () => {\r\n            let response = null;\r\n            const params = {};\r\n\r\n            if (props.type !== 'similar') {\r\n                switch(props.category) {\r\n                    case category.movie:\r\n                        response = await tmdbApi.getMoviesList(props.type, {params});\r\n                        break;\r\n                    default:\r\n                        response = await tmdbApi.getTvList(props.type, {params});\r\n                }\r\n            } else {\r\n                response = await tmdbApi.similar(props.category, props.id);\r\n            }\r\n            setItems(response.results);\r\n        }\r\n        getList();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"movie-list\">\r\n            <Swiper\r\n                grabCursor={true}\r\n                spaceBetween={10}\r\n                slidesPerView={'auto'}\r\n            >\r\n                {\r\n                    items.map((item, i) => (\r\n                        <SwiperSlide key={i}>\r\n                            <MovieCard item={item} category={props.category}/>\r\n                        </SwiperSlide>\r\n                    ))\r\n                }\r\n            </Swiper>\r\n        </div>\r\n    );\r\n}\r\n\r\nMovieList.propTypes = {\r\n    category: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default MovieList;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { OutlineButton } from '../components/button/Button';\r\nimport HeroSlide from '../components/hero-slide/HeroSlide';\r\nimport MovieList from '../components/movie-list/MovieList';\r\n\r\nimport { category, movieType, tvType } from '../api/tmdbApi';\r\n\r\nconst Home = () => {\r\n\r\n    \r\n    return (\r\n        <>\r\n            <HeroSlide/>\r\n            <div className=\"container\">\r\n                <div className=\"section mb-3\">\r\n                    <div className=\"section__header mb-2\">\r\n                        <h2>Peliculas en Tendencia</h2>\r\n                        <Link to=\"/movie\">\r\n                            <OutlineButton className=\"small\">Ver mas</OutlineButton>\r\n                        </Link>\r\n                    </div>\r\n                    <MovieList category={category.movie} type={movieType.popular}/>\r\n                </div>\r\n\r\n                <div className=\"section mb-3\">\r\n                    <div className=\"section__header mb-2\">\r\n                        <h2>Peliculas Mejores Valoradas</h2>\r\n                        <Link to=\"/movie\">\r\n                            <OutlineButton className=\"small\">Ver mas</OutlineButton>\r\n                        </Link>\r\n                    </div>\r\n                    <MovieList category={category.movie} type={movieType.top_rated}/>\r\n                </div>\r\n\r\n                <div className=\"section mb-3\">\r\n                    <div className=\"section__header mb-2\">\r\n                        <h2>Series en Tendencia</h2>\r\n                        <Link to=\"/tv\">\r\n                            <OutlineButton className=\"small\">Ver mas</OutlineButton>\r\n                        </Link>\r\n                    </div>\r\n                    <MovieList category={category.tv} type={tvType.popular}/>\r\n                </div>\r\n\r\n                <div className=\"section mb-3\">\r\n                    <div className=\"section__header mb-2\">\r\n                        <h2>Series Mejores Valoradas</h2>\r\n                        <Link to=\"/tv\">\r\n                            <OutlineButton className=\"small\">Ver mas</OutlineButton>\r\n                        </Link>\r\n                    </div>\r\n                    <MovieList category={category.tv} type={tvType.top_rated}/>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\n\nimport './page-header.scss';\n\nimport bg from '../../assets/footer-bg.jpg';\n\nconst PageHeader = props => {\n    return (\n        <div className=\"page-header\" style={{backgroundImage: `url(${bg})`}}>\n            <h2>{props.children}</h2>\n        </div>\n    );\n}\n\n\nexport default PageHeader;\n","import React from 'react';\n\nimport './input.scss';\n\nconst Input = props => {\n    return (\n        <input\n            type={props.type}\n            placeholder=\"Escribe aqui para Buscar...\"\n            value={props.value}\n            onChange={props.onChange ? (e) => props.onChange(e) : null}\n        />\n    );\n}\n\nexport default Input;\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useHistory, useParams } from 'react-router';\r\n\r\nimport './movie-grid.scss';\r\n\r\nimport MovieCard from '../movie-card/MovieCard';\r\nimport Button, { OutlineButton } from '../button/Button';\r\nimport Input from '../input/Input'\r\n\r\nimport tmdbApi, { category, movieType, tvType } from '../../api/tmdbApi';\r\n\r\nconst MovieGrid = props => {\r\n\r\n    const [items, setItems] = useState([]);\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [totalPage, setTotalPage] = useState(0);\r\n\r\n    const { keyword } = useParams();\r\n\r\n    useEffect(() => {\r\n        const getList = async () => {\r\n            let response = null;\r\n            if (keyword === undefined) {\r\n                const params = {};\r\n                switch(props.category) {\r\n                    case category.movie:\r\n                        response = await tmdbApi.getMoviesList(movieType.upcoming, {params});\r\n                        break;\r\n                    default:\r\n                        response = await tmdbApi.getTvList(tvType.popular, {params});\r\n                }\r\n            } else {\r\n                const params = {\r\n                    query: keyword\r\n                }\r\n                response = await tmdbApi.search(props.category, {params});\r\n            }\r\n            setItems(response.results);\r\n            setTotalPage(response.total_pages);\r\n        }\r\n        getList();\r\n    }, [props.category, keyword]);\r\n\r\n    const loadMore = async () => {\r\n        let response = null;\r\n        if (keyword === undefined) {\r\n            const params = {\r\n                page: page + 1\r\n            };\r\n            switch(props.category) {\r\n                case category.movie:\r\n                    response = await tmdbApi.getMoviesList(movieType.upcoming, {params});\r\n                    break;\r\n                default:\r\n                    response = await tmdbApi.getTvList(tvType.popular, {params});\r\n            }\r\n        } else {\r\n            const params = {\r\n                page: page + 1,\r\n                query: keyword\r\n            }\r\n            response = await tmdbApi.search(props.category, {params});\r\n        }\r\n        setItems([...items, ...response.results]);\r\n        setPage(page + 1);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"section mb-3\">\r\n                <MovieSearch category={props.category} keyword={keyword}/>\r\n            </div>\r\n            <div className=\"movie-grid\">\r\n                {\r\n                    items.map((item, i) => <MovieCard category={props.category} item={item} key={i}/>)\r\n                }\r\n            </div>\r\n            {\r\n                page < totalPage ? (\r\n                    <div className=\"movie-grid__loadmore\">\r\n                        <OutlineButton className=\"small\" onClick={loadMore}>Cargar Mas</OutlineButton>\r\n                    </div>\r\n                ) : null\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nconst MovieSearch = props => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [keyword, setKeyword] = useState(props.keyword ? props.keyword : '');\r\n\r\n    const goToSearch = useCallback(\r\n        () => {\r\n            if (keyword.trim().length > 0) {\r\n                const originalKeyword = `${keyword}`;\r\n\r\n                const urlKeyword = originalKeyword.replace(/ /g, '-');\r\n\r\n                history.push(`/${category[props.category]}/search/${urlKeyword}`);\r\n            }\r\n        },\r\n        [keyword, props.category, history]\r\n    );\r\n\r\n    useEffect(() => {\r\n        const enterEvent = (e) => {\r\n            e.preventDefault();\r\n            if (e.keyCode === 13) {\r\n                goToSearch();\r\n            }\r\n        }\r\n        document.addEventListener('keyup', enterEvent);\r\n        return () => {\r\n            document.removeEventListener('keyup', enterEvent);\r\n        };\r\n    }, [keyword, goToSearch]);\r\n\r\n    return (\r\n        <div className=\"movie-search\">\r\n            <Input\r\n                type=\"text\"\r\n                placeholder=\"Enter keyword\"\r\n                value={keyword}\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n            />\r\n            <Button className=\"small\" onClick={goToSearch}>Buscar</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieGrid;\r\n","import React from 'react';\r\n\r\nimport { useParams } from 'react-router';\r\n\r\nimport PageHeader from '../components/page-header/PageHeader';\r\n\r\nimport { category as cate } from '../api/tmdbApi';\r\nimport MovieGrid from '../components/movie-grid/MovieGrid';\r\n\r\nconst Catalog = () => {\r\n\r\n    const { category } = useParams();\r\n\r\n    return (\r\n        <>\r\n            <PageHeader>\r\n                {category === cate.movie ? 'Peliculas' : 'Series'}\r\n            </PageHeader>\r\n            <div className=\"container\">\r\n                <div className=\"section mb-3\">\r\n                    <MovieGrid category={category}/>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Catalog;\r\n","import React, { useState, useEffect } from 'react';\n\nimport { useParams } from 'react-router';\n\nimport tmdbApi from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\n\nconst CastList = props => {\n\n    const {category} = useParams();\n\n    const [casts, setCasts] = useState([]);\n\n    useEffect(() => {\n        const getCredits = async () => {\n            const res = await tmdbApi.credits(category, props.id);\n            setCasts(res.cast.slice(0, 5));\n        }\n        getCredits();\n    }, [category, props.id]);\n    return (\n        <div className=\"casts\">\n            {\n                casts.map((item, i) => (\n                    <div key={i} className=\"casts__item\">\n                        <div className=\"casts__item__img\" style={{backgroundImage: `url(${apiConfig.w500Image(item.profile_path)})`}}></div>\n                        <p className=\"casts__item__name\">{item.name}</p>\n                    </div>\n                ))\n            }\n        </div>\n    );\n}\n\nexport default CastList;\n","export default __webpack_public_path__ + \"static/media/play-circle-svgrepo-com (1).36044cf6.svg\";","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom'; // Importa Link\r\nimport tmdbApi from '../../api/tmdbApi';\r\nimport apiConfig from '../../api/apiConfig';\r\nimport './season-list.scss';\r\nimport playIcon from '../../assets/play-circle-svgrepo-com (1).svg';\r\n\r\nconst SeasonList = ({ showSeasonsFunction , seasonNumberFunction}) => {\r\n    const { category, id } = useParams();\r\n    const [item, setItem] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const getDetail = async () => {\r\n            try {\r\n                const response = await tmdbApi.detail(category, id, { params: {} });\r\n                setItem(response);\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n                // Puedes manejar el error aquí, por ejemplo, estableciendo un estado de error\r\n            }\r\n        };\r\n        getDetail();\r\n    }, [category, id]);\r\n\r\n    let SeasonCard = null;\r\n\r\n\r\n\r\n    if (item && item.seasons) {\r\n        SeasonCard = item.seasons.map(season => (\r\n            <div key={season.id} onClick={() => { showSeasonsFunction(); seasonNumberFunction(season.season_number);}} className='season-card' style={{backgroundImage: `url(${apiConfig.originalImage(season.poster_path)})`}}>\r\n                <div className='details-container'>\r\n                    \r\n                    <div className='text-container'>\r\n                        {season.season_number === 0\r\n                        ? \r\n                        <h2 className='season-name'>{season.name}</h2>\r\n                        : season.season_number !== 0\r\n                        ? \r\n                        <h2 className='season-name'>Temporada {season.season_number}</h2>\r\n                        : ''\r\n                        }\r\n                        \r\n                        <p>Episodios: {season.episode_count}</p>\r\n                    </div>\r\n                    <img className='play-icon' src={playIcon} alt=\"\" />\r\n                </div>\r\n            </div>\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <>{SeasonCard}</>\r\n    );\r\n};\r\n\r\nexport default SeasonList;\r\n","export default __webpack_public_path__ + \"static/media/navigation-last-last-page-lastpage-right-next-icon-svgrepo-com.47e82fcb.svg\";","export default __webpack_public_path__ + \"static/media/navigation-before-first-page-firstpage-left-previous-icon-svgrepo-com.ab7e0350.svg\";","export default __webpack_public_path__ + \"static/media/list-ul-alt-svgrepo-com (1).2460ca28.svg\";","export default __webpack_public_path__ + \"static/media/back-svgrepo-com.1ff8aa9c.svg\";","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\nimport tmdbApi from '../../api/tmdbApi';\r\nimport apiConfig from '../../api/apiConfig';\r\n\r\nimport './detail.scss';\r\nimport CastList from './CastList';\r\n\r\nimport MovieList from '../../components/movie-list/MovieList';\r\nimport SeasonList from '../../components/season-list/season-list';\r\n\r\nimport nextIcon from '../../assets/navigation-last-last-page-lastpage-right-next-icon-svgrepo-com.svg';\r\nimport previusIcon from '../../assets/navigation-before-first-page-firstpage-left-previous-icon-svgrepo-com.svg';\r\nimport listIcon from '../../assets/list-ul-alt-svgrepo-com (1).svg';\r\nimport backIcon from '../../assets/back-svgrepo-com.svg';\r\n\r\nimport playIcon from '../../assets/play-circle-svgrepo-com (1).svg';\r\n\r\n\r\nconst Detail = () => {\r\n    const { category, id } = useParams();\r\n\r\n    const [item, setItem] = useState(null);\r\n    const [episode, setEpisode] = useState(null);\r\n    const [season, setSeason] = useState(null);\r\n\r\n    const [iframeSrc, setIframeSrc] = useState('');\r\n    const [TitleCategory, setTitleCategory] = useState('');\r\n    const [typeOfContent, setTypeOfContent] = useState('');\r\n\r\n    useEffect(() => {\r\n        const getDetail = async () => {\r\n            const response = await tmdbApi.detail(category, id, {params:{}});\r\n            setItem(response);\r\n            window.scrollTo(0,0);\r\n\r\n            // Determinar la fuente del iframe\r\n            const src = category === 'movie'\r\n                ? `https://es.oceanplay.me/embeds/${id}`\r\n                : '';\r\n\r\n            const title = category === 'movie'\r\n                ? `Ver Pelicula Online`\r\n                : category === 'tv'\r\n                ? `Ver Serie Online`\r\n                : '';\r\n\r\n            const typeOfContent = category === 'movie'\r\n                ? `Pelicula`\r\n                : category === 'tv'\r\n                ? `Serie`\r\n                : ''; \r\n\r\n            setIframeSrc(src);\r\n            setTitleCategory(title);\r\n            setTypeOfContent(typeOfContent);\r\n        }\r\n        getDetail();\r\n    }, [category, id]);\r\n    \r\n\r\n\r\n    const [showSeasons, setShowSeasons] = useState(true);\r\n\r\n    const [showEpisodes, setshowEpisodes] = useState(false);\r\n\r\n\r\n    const showSeasonsFunction = () => {\r\n        if (showSeasons === true) {\r\n            // SE MUESTRA EL SERIES PLAYER\r\n\r\n            setShowSeasons(false)\r\n            setshowEpisodes(true)\r\n\r\n            window.scrollTo(0,800);\r\n\r\n        } else {\r\n            // SE OCULTA EL SERIES PLAYER\r\n\r\n            setShowSeasons(true)\r\n            setshowEpisodes(false)\r\n            setEpisodeNumber(1);\r\n\r\n            window.scrollTo(0,800);\r\n        }\r\n    }\r\n\r\n\r\n    const [seasonNumber, setSeasonNumber] = useState(1);\r\n    const [episodeNumber, setEpisodeNumber] = useState(1);\r\n\r\n    let episodeUrl = `https://es.oceanplay.me/embeds/${id}/${seasonNumber}/${episodeNumber}`;\r\n\r\n    const nextEpisode = () => {\r\n        setEpisodeNumber(episodeNumber + 1);\r\n    }\r\n\r\n    const previusEpisode = () => {\r\n        setEpisodeNumber(episodeNumber - 1);\r\n    }\r\n\r\n    let isHidden = false;\r\n    const listaEpisodios = document.getElementById('lista-episodios');\r\n\r\n    const changeEpisode = (episodeNumber) => {\r\n        setEpisodeNumber(episodeNumber);\r\n        console.log(episodeNumber, \"se seteo el episodio\");\r\n        isHidden = true;\r\n        listaEpisodios.classList.add('hidden')\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getEpisodeDetail = async () => {\r\n            const response = await tmdbApi.getEpisodeDetails(category, id, seasonNumber, episodeNumber, {params:{}});\r\n            setEpisode(response);\r\n            }\r\n        getEpisodeDetail();\r\n        }, [category, id, seasonNumber, episodeNumber]);\r\n\r\n    const seasonNumberFunction = (seasonSelected) => {\r\n        setSeasonNumber(seasonSelected);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getSeasonDetails = async () => {\r\n            const response = await tmdbApi.getSeasonDetails(category, id, seasonNumber, {params:{}});\r\n            setSeason(response);\r\n            }\r\n            getSeasonDetails();\r\n        }, [category, id, seasonNumber]);\r\n\r\n    \r\n\r\n    const changeIsHidden = () => {\r\n        if(isHidden)\r\n        {\r\n            isHidden = false\r\n            listaEpisodios.classList.add('hidden')\r\n        } else {\r\n            isHidden = true;\r\n            listaEpisodios.classList.remove('hidden')\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                item && (\r\n                    <>\r\n                        <div className=\"banner\" style={{backgroundImage: `url(${apiConfig.originalImage(item.backdrop_path || item.poster_path)})`}}></div>\r\n                        <div className=\"mb-3 movie-content container\">\r\n                            <div className=\"movie-content__poster\">\r\n                                <div className=\"movie-content__poster__img\" style={{backgroundImage: `url(${apiConfig.originalImage(item.poster_path || item.backdrop_path)})`}}></div>\r\n                            </div>\r\n                            <div className=\"movie-content__info\">\r\n                                <h1 className=\"title\">\r\n                                    {item.title || item.name}\r\n                                </h1>\r\n                                <div className=\"genres\">\r\n                                    {\r\n                                        item.genres && item.genres.slice(0, 5).map((genre, i) => (\r\n                                            <span key={i} className=\"genres__item\">{genre.name}</span>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n\r\n                                <div className='type-content'>\r\n                                    <h2>{typeOfContent}</h2>\r\n                                    \r\n                                    {category === 'movie'\r\n                                    ? <div className='movie-details'>\r\n                                            <p><strong>Duracion: {item.runtime} min</strong></p> <h3>Fecha de estreno: {item.release_date}</h3>\r\n                                        </div>\r\n                                    : category === 'tv'\r\n                                    ? <div className='tv-seasons-episodes'>\r\n                                            <p><strong>Temporadas: {item.number_of_seasons}</strong></p>\r\n                                            <p><strong>Episodios: {item.number_of_episodes}</strong></p>\r\n                                            <h3>Fecha de estreno: {item.first_air_date}</h3>\r\n                                        </div>\r\n                                    : ''}\r\n                                    \r\n                                </div>\r\n                                <p className=\"overview\">{item.overview}</p>\r\n                                <div className=\"cast\">\r\n                                    <div className=\"section__header\">\r\n                                        <h2>Actores</h2>\r\n                                    </div>\r\n                                    <CastList id={item.id}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"container\">\r\n\r\n                            {category === 'movie'\r\n                                ? \r\n                                <div className='movie-serie-player'>\r\n                                <h2 className='titleCategory'>{TitleCategory}</h2>\r\n                                <div className=\"section mb-3 pelicula\">\r\n                                    <iframe className='movie-iframe'\r\n                                        src={iframeSrc} title={category}\r\n                                        frameborder=\"0\" \r\n                                        allowfullscreen=\"\" \r\n                                        webkitallowfullscreen=\"\" \r\n                                        mozallowfullscreen=\"\" sandbox='allow-forms allow-same-origin allow-scripts allow-top-navigation'>\r\n                                    </iframe>\r\n                                </div>\r\n                                </div>\r\n\r\n                                : category === 'tv'\r\n                                ?\r\n\r\n\r\n                                \r\n                                <div>\r\n                                {showSeasons && \r\n                                    (\r\n                                        <div className='episodes-container'>\r\n                                            <h2 className='episodes-title'>Temporadas</h2>\r\n                                            <div className='season-list'>\r\n                                                <SeasonList seasonNumberFunction={seasonNumberFunction} showSeasonsFunction={showSeasonsFunction}></SeasonList>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                    )\r\n                                }\r\n\r\n                                {showEpisodes &&\r\n                                    (\r\n                                        <div className='player-episode-container'>\r\n                                            \r\n                                            <div className='episode-info'>\r\n                                                <p>Episodio {episode.episode_number}: \"{episode.name}\"</p>\r\n                                                \r\n                                                {season.season_number === 0\r\n                                                ? \r\n                                                <p className='temporada'>{season.name}</p>\r\n                                                : season.season_number !== 0\r\n                                                ? \r\n                                                <p className='temporada'>Temporada {season.season_number}</p>\r\n                                                : ''\r\n                                                }\r\n                                            </div>\r\n                                            <div className='pelicula'>\r\n                                                <iframe className='movie-iframe'\r\n                                                    src={episodeUrl} title={category}\r\n                                                    frameborder=\"0\" \r\n                                                    allowfullscreen=\"\" \r\n                                                    webkitallowfullscreen=\"\" \r\n                                                    mozallowfullscreen=\"\" sandbox='allow-forms allow-same-origin allow-scripts allow-top-navigation'>\r\n                                                </iframe>\r\n                                            </div>\r\n                                            <div className='series-control-container'>\r\n                                                <div className='control-up'>\r\n                                                    \r\n                                                    <button onClick={previusEpisode}><img src={previusIcon} alt=\"\"/><p className='previus-button'>Episodio Anterior</p></button>\r\n                                                    <div className='control-episode-list'>\r\n                                                        <div className='episode-button'>\r\n                                                            <button onClick={changeIsHidden}><p className='episode-list-button'>Lista de Episodios</p><img src={listIcon} alt=\"\" /></button>\r\n\r\n\r\n                                                            <div id='lista-episodios' className='episodes-list hidden scroll'>\r\n                                                                {season.episodes.map(episode => (\r\n                                                                    <div key={episode.id} onClick={() => changeEpisode(episode.episode_number)} className='episode-card' style={{backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(${apiConfig.originalImage(episode.still_path)})`}}>\r\n                                                                            <div className='episode-details'>\r\n                                                                                <h2 className='season-name'>Episodio {episode.episode_number}:</h2>\r\n                                                                                <h2 className='season-name'>{episode.name}</h2>\r\n                                                                            </div>\r\n                                                                            <img className='play-icon' src={playIcon} alt=\"\" />\r\n                                                                    </div>\r\n                                                                ))}\r\n                                                            </div>\r\n\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <button onClick={showSeasonsFunction} className='volver-button'><img src={backIcon} alt=\"\" /> Elejir otra temporada</button>\r\n\r\n                                                    <button onClick={nextEpisode}><p className='next-button'>Proximo Episodio </p><img src={nextIcon} alt=\"\"/></button>\r\n\r\n                                                </div>\r\n                                                <div className='control-bottom'>\r\n                                                \r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                                </div>\r\n\r\n                                : ''}\r\n\r\n\r\n\r\n\r\n                            <div className=\"section mb-3\">\r\n                                <div className=\"section__header mb-2\">\r\n                                    <h2>Similar</h2>\r\n                                </div>\r\n                                <MovieList category={category} type=\"similar\" id={item.id}/>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Detail;\r\n","import React from 'react';\r\n\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Home from '../pages/Home';\r\nimport Catalog from '../pages/Catalog';\r\nimport Detail from '../pages/detail/Detail';\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route\r\n                path='/:category/search/:keyword'\r\n                component={Catalog}\r\n            />\r\n            <Route\r\n                path='/:category/:id'\r\n                component={Detail}\r\n            />\r\n            <Route\r\n                path='/:category'\r\n                component={Catalog}\r\n            />\r\n            <Route\r\n                path='/'\r\n                exact\r\n                component={Home}\r\n            />\r\n            \r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","\r\nimport './introLoader.scss';\r\nimport logo from '../../assets/tmovie.png';\r\n\r\nconst IntroLoader = () => {\r\n\r\n    return (\r\n        <>\r\n            {\r\n                <div className='introLoaderBackground'>\r\n                    <div className=\"introLoader\">\r\n                        <div className='blackBG'></div>\r\n                        <div className='backgroundImg'>\r\n                            <img src={logo} alt=\"\" />\r\n                        </div>\r\n                        <h2>ZETA STREAMING</h2>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default IntroLoader;","import 'swiper/swiper.min.css';\nimport './assets/boxicons-2.0.7/css/boxicons.min.css';\nimport './App.scss';\n\nimport React, { useState, useEffect } from 'react';\n\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport Header from './components/header/Header';\nimport Footer from './components/footer/Footer';\n\nimport Routes from './config/Routes';\n\nimport IntroLoader from './components/introLoader/introLoader.jsx'\n\nfunction App() {\n\n  const [showLoader, setShowLoader] = useState(true);\n\n\n  // Simula el tiempo de carga con setTimeout\n  useEffect(() => {\n    setTimeout(() => {\n      setShowLoader(false);\n    }, 8500);\n  }, []);\n\n  \n\n// Define una función para eliminar un iframe dentro del body\n  const removeIframeFromBody = () => {\n    const iframeToRemove = document.querySelector('body > iframe');\n    if (iframeToRemove) {\n      iframeToRemove.parentNode.removeChild(iframeToRemove);\n    }\n  };\n  \n  // Agrega un listener para el evento load del documento\n  document.addEventListener('DOMContentLoaded', () => {\n    // Agrega un listener para el evento load de los iframes\n    document.addEventListener('load', (event) => {\n      // Verifica si el elemento cargado es un iframe\n      if (event.target.tagName.toLowerCase() === 'iframe') {\n        // Ejecuta la función para eliminar el iframe del body\n        removeIframeFromBody();\n      }\n    }, true); // Usa el tercer parámetro true para capturar el evento durante la fase de captura\n  });\n\n\n    return (\n          <BrowserRouter>\n            <Route\n              render={(props) => (\n                <>\n                  {showLoader && <IntroLoader />}\n                  <Header {...props} />\n                  <Routes />\n                  <Footer />\n                </>\n              )}\n            />\n          </BrowserRouter>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}